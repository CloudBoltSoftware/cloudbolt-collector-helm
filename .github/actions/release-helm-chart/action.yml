name: 'Release Helm Chart'
description: 'Automates the process of releasing a Helm chart'

inputs:
  app_version:
    description: 'Application version'
    required: true
  image_tag:
    description: 'Image tag'
    required: true
  chart_version:
    description: 'Chart version'
    required: true
  latest:
    description: 'Latest'
    required: true
    default: 'false'
  github_token:
    description: 'GitHub Token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Configure Git
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git config --global user.email "github-actions@cloudbolt.io"
        git config --global user.name "GitHub Actions"

    - name: Create New Branch for Changes
      shell: bash
      id: branch
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        NEW_BRANCH="publish-chart-${{ inputs.chart_version }}"
        git checkout -b $NEW_BRANCH
        echo "branch=$NEW_BRANCH" >> $GITHUB_OUTPUT

    - name: Update Chart.yaml with new versions
      shell: bash
      run: |
        yq e '.appVersion = "${ inputs.app_version }}"' -i Chart.yaml
        yq e '.version = "${{ inputs.chart_version }}"' -i Chart.yaml
        yq e '.image.tag = "${{ inputs.image_tag }}"' -i values.yaml

    - name: Commit Updated Files
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git add Chart.yaml values.yaml
        git commit -m "Create release for version ${{ inputs.chart_version }}, appVersion ${{ inputs.app_version }}, and image tag ${{ inputs.image_tag }}"
        # git push --set-upstream origin ${{ steps.branch.outputs.branch }}
        # gh pr create \
          # --title "Update Helm Chart to version ${{ inputs.chart_version }}" \
          # --body "Updating appVersion to ${{ inputs.app_version }} and image tag to ${{ inputs.image_tag }}." \
          # --base main \
          # --repo CloudBoltSoftware/cloudbolt-collector-helm \
          # --head ${{ steps.branch.outputs.branch }}

    - name: Make .cr-release-packages directory
      shell: bash
      run: |
        mkdir -p ./.cr-release-packages

    - name: Install Chart Releaser
      shell: bash
      run: |
        curl -L https://github.com/helm/chart-releaser/releases/download/v1.6.1/chart-releaser_1.6.1_linux_amd64.tar.gz -o chart-releaser.tar.gz
        tar -zxvf chart-releaser.tar.gz
        sudo mv cr /usr/local/bin/

    - name: Package Helm Chart
      shell: bash
      run: |
        cr package --config .cr.yaml --package-path ./.cr-release-packages

    - name: Create GitHub Release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        echo "Creating GitHub Release"
        cr upload \
        --commit $(git rev-parse HEAD) \
        --config .cr.yaml \
        --owner CloudBoltSoftware \
        --git-repo cloudbolt-collector-helm \
        --token $GITHUB_TOKEN \
        --generate-release-notes \
        --release-name-template "${{ inputs.chart_version }}" \
        --package-path ./.cr-release-packages \
        --pages-branch gh-pages \
        --push
        echo "Updating index.yaml"
        cr index \
        --config .cr.yaml \
        --owner CloudBoltSoftware \
        --git-repo cloudbolt-collector-helm \
        --token $GITHUB_TOKEN \
        --charts-repo https://CloudBoltSoftware.github.io/cloudbolt-collector-helm \
        --push

    - name: Output results
      shell: bash
      run: |
        echo "Release Summary"
        echo "New Branch: $NEW_BRANCH"
        echo "App Version: ${{ inputs.app_version }}"
        echo "Chart Version: ${{ inputs.chart_version }}"
        echo "Image Tag: ${{ inputs.image_tag }}"
        echo "Latest Release: ${{ inputs.latest }}"
