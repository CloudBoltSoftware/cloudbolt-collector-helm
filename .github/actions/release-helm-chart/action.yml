name: 'Release Helm Chart'
description: 'Automates the process of releasing a Helm chart'

inputs:
  app_version:
    description: 'Application version'
    required: true
  image_tag:
    description: 'Image tag'
    required: true
  chart_version:
    description: 'Chart version'
    required: true
  latest:
    description: 'Latest'
    required: true
    default: 'false'
  github_token:
    description: 'GitHub Token'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Helm
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Configure Git
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git config --global user.email "github-actions@cloudbolt.io"
        git config --global user.name "GitHub Actions"

    - name: Create New Branch for Changes
      shell: bash
      id: branch
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        NEW_BRANCH="release/${{ inputs.chart_version }}"
        git checkout -b $NEW_BRANCH
        echo "branch=$NEW_BRANCH" >> $GITHUB_OUTPUT

    - name: Update Chart.yaml with new versions
      shell: bash
      run: |
        yq e '.appVersion = "${{ inputs.app_version }}"' -i Chart.yaml
        yq e '.version = "${{ inputs.chart_version }}"' -i Chart.yaml
        yq e '.image.tag = "${{ inputs.image_tag }}"' -i values.yaml

    - name: Commit Updated Files
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git add Chart.yaml values.yaml
        git commit -m "Create release for version ${{ inputs.chart_version }}, appVersion ${{ inputs.app_version }}, and image tag ${{ inputs.image_tag }}"
        git push --set-upstream origin ${{ steps.branch.outputs.branch }}

    - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

    - name: Package Helm Chart
      shell: bash
      run: >
        helm package
        --version ${{ inputs.chart_version }}
        --app-version ${{ inputs.app_version }}
        --destination ./docs
        .

    - name: Update Helm Repo Index
      shell: bash
      run: >
        helm repo index
        docs
        --url https://cloudboltsoftware.github.io/cloudbolt-collector-helm/

    - name: Commit Updated Helm Repo Index
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        git add docs
        git commit -m "Update Helm Repo Index"
        git push

    - name: Create GitHub Release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: >
        gh release create
        ${{ inputs.chart_version }}
        --target ${{ steps.branch.outputs.branch }}
        --generate-notes
        ./docs/*.tgz

    - name: Create Pull Reqeust
      shell: bash
      continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: >
        gh pr create
        --title "Release ${{ inputs.chart_version }}"
        --body "Release ${{ inputs.chart_version }}"
        --base main
        --head ${{ steps.branch.outputs.branch }}


    - name: Output results
      shell: bash
      run: |
        echo "| Key            | Value |"
        echo "|----------------|-------|"
        echo "| New Branch     | $NEW_BRANCH |"
        echo "| App Version    | ${{ inputs.app_version }} |"
        echo "| Chart Version  | ${{ inputs.chart_version }} |"
        echo "| Image Tag      | ${{ inputs.image_tag }} |"
        echo "| Latest Release | ${{ inputs.latest }} |"
        echo "| Package URL    | [Link](https://cloudboltsoftware.github.io/cloudbolt-collector-helm/cloudbolt-collector-${{ inputs.chart_version }}.tgz) |"
        echo "| Docs URL       | [Link](https://cloudboltsoftware.github.io/cloudbolt-collector-helm/) |"
        echo "| Release URL    | [Link](https://github.com/CloudBoltSoftware/cloudbolt-collector-helm/releases/tag/${{ inputs.chart_version }}) |"
        echo "| Public Key    | [Link](https://cloudboltsoftware.github.io/cloudbolt-collector-helm/public.key) |"
