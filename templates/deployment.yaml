apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cloudbolt-collector-helm.fullname" . }}
  labels:
    {{- include "cloudbolt-collector-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cloudbolt-collector-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cloudbolt-collector-helm.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cloudbolt-collector-helm.serviceAccountName" . }}
      securityContext:
       {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
           {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.IMAGE_VERSION | default .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
           - name: DEBUG
             value: {{ quote .Values.DEBUG }}
           - name: OCP_IP
             value: {{ quote .Values.OCP_IP }}
           - name: OCP_PORT
             value: {{ quote .Values.OCP_PORT }}
           - name: OCP_SERVICENAME
             value: {{ quote .Values.OCP_SERVICENAME }}
           - name: OCP_SERVICEPASS
             valueFrom:
               secretKeyRef:
                 name: my-ocp-secret
                 key: OCP_SERVICEPASS
           - name: OCP_ENABLE_SSL_VERIFICATION
             value: {{ quote .Values.OCP_ENABLE_SSL_VERIFICATION | default "False" }}
           - name: INGESTION_API_URL
             value: {{ quote .Values.INGESTION_API_URL }}
           - name: INGESTION_API_TOKEN
             valueFrom:
               secretKeyRef:
                 name: cb-ingestion-token
                 key: INGESTION_API_TOKEN
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - find /tmp -type f -mmin -40 | grep liveness.txt
            initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.liveness.failureThreshold }}
            periodSeconds: {{ .Values.liveness.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
